{
    "openapi": "3.0.0",
    "info": {
        "title": "Hamiket-Task",
        "version": "1.0.0",
        "description": "API documentation for the Task Manager project"
    },
    "servers": [
        {
            "url": "http://localhost:3000/api/v1",
            "description": "Local server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "summary": "Register a new user",
                "tags": ["Users"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "example": "hasan",
                                        "minLength": 4,
                                        "maxLength": 30
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345678",
                                        "minLength": 8,
                                        "pattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[@$!%*?&])[A-Za-z0-9@$!%*?&]{8,}$"
                                    }
                                },
                                "required": ["userName", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "summary": "Log in an existing user",
                "tags": ["Users"],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userName": {
                                        "type": "string",
                                        "example": "hasan"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345678"
                                    }
                                },
                                "required": ["userName", "password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/tasks": {
            "post": {
                "summary": "Create a new task",
                "tags": ["Tasks"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Complete the project",
                                        "minLength": 1,
                                        "maxLength": 100
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Finish the project by end of the month",
                                        "maxLength": 500
                                    }
                                },
                                "required": ["name"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Complete the project"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Finish the project by end of the month"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Pending"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "get": {
                "summary": "Retrieve all tasks",
                "tags": ["Tasks"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Complete the project"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Finish the project by end of the month"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "Pending"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/tasks/{id}": {
            "put": {
                "summary": "Update a task",
                "tags": ["Tasks"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "InProgress",
                                            "Completed"
                                        ],
                                        "example": "Completed"
                                    }
                                },
                                "required": ["status"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Complete the project"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Finish the project by end of the month"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Completed"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "summary": "Delete a task",
                "tags": ["Tasks"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
